{"version":3,"sources":["ui/theme/index.ts","ui/components/Header.tsx","ui/content/pages/Main.tsx","util/baseUrl.ts","util/authentication/microsoft.ts","ui/content/pages/Test.tsx","backend/images/onedrive/ImageFetcher.ts","backend/images/onedrive/OneDrive.ts","ui/content/pages/Photos.tsx","ui/content/Content.tsx","ui/App.tsx","index.tsx","util/reportWebVitals.ts"],"names":["theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","grow","flexGrow","Header","classes","AppBar","position","Toolbar","IconButton","Collections","Typography","variant","noWrap","className","Main","Array","map","i","baseUrl","window","location","hostname","MicrosoftAuthenticationProvider","msalConfig","auth","clientId","redirectUri","cache","cacheLocation","scopes","application","PublicClientApplication","this","authenticate","async","isAuthenticated","hash","startsWith","handleRedirectPromise","Error","acquireTokenRedirect","acquireTokenSilent","account","getAllAccounts","e","getAccessToken","accessToken","logout","Test","path","useParams","result","setResult","React","authentication","client","MSGraphClient","initWithMiddleware","authProvider","api","get","JSON","stringify","undefined","ImageFetcher","constructor","config","pendingItems","foundItems","status","start","children","graphGet","push","value","forkCount","setTimeout","fetchItem","getResult","waitForCompletion","item","id","getDriveId","getItemId","name","size","parentReference","Promise","resolve","intervalId","setInterval","length","clearInterval","shift","folder","cachedItems","items","fetchAllChildren","set","remoteItem","getItemPath","file","console","error","itemPath","iterator","PageIterator","data","iterate","driveId","OneDrive","listAllFiles","fetcher","Photos","progress","setProgress","fetchedItems","itemsToFetch","loading","setLoading","oneDrive","allFiles","Button","onClick","color","ProgressWithInfo","props","LinearProgress","Math","round","content","marginTop","padding","spacing","Content","App","basename","URL","pathname","CssBaseline","ThemeProvider","onPerfEntry","ReactDOM","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.7aaf10d7.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fbc02d',\n    },\n    secondary: {\n      main: '#ffab00',\n    },\n  },\n});\n","import * as React from 'react';\n\nimport { AppBar, IconButton, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport { Collections as CollectionsIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nexport const Header: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <IconButton>\n          <CollectionsIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap>\n          BilderboX\n        </Typography>\n        <div className={classes.grow} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import * as React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nexport const Main: React.FC = () => {\n  return (\n    <>\n      {[...Array(100)].map((i) => (\n        <Typography key={i}>Hello World!</Typography>\n      ))}\n    </>\n  );\n};\n","export const baseUrl =\n  window.location.hostname === 'localhost' ? 'https://localhost:3000/' : 'https://jakobnohe.de/bilderbox/';\n","import { Configuration, PublicClientApplication } from '@azure/msal-browser';\nimport { AuthenticationProvider } from '.';\nimport { baseUrl } from '../baseUrl';\n\nexport class MicrosoftAuthenticationProvider implements AuthenticationProvider {\n  private msalConfig: Configuration = {\n    auth: {\n      clientId: 'df346ab3-6ba2-4c7a-a4b6-96986093b576',\n      redirectUri: baseUrl,\n    },\n    cache: {\n      cacheLocation: 'localStorage',\n    },\n  };\n\n  private scopes = ['User.Read', 'Files.ReadWrite.All', 'offline_access'];\n  private application = new PublicClientApplication(this.msalConfig);\n\n  public authenticate = async (): Promise<void> => {\n    if (!(await this.isAuthenticated())) {\n      if (!window.location.hash.startsWith('#code=')) {\n        this.application.acquireTokenRedirect({ scopes: this.scopes });\n      } else {\n        const result = await this.application.handleRedirectPromise();\n        if (!result) {\n          throw new Error('Failed to authenticate, result ist NULL');\n        }\n      }\n    }\n  };\n\n  public isAuthenticated = async (): Promise<boolean> => {\n    try {\n      await this.application.acquireTokenSilent({\n        account: this.application.getAllAccounts()[0],\n        scopes: this.scopes,\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  public getAccessToken = async (): Promise<string> => {\n    try {\n      const result = await this.application.acquireTokenSilent({\n        account: this.application.getAllAccounts()[0],\n        scopes: this.scopes,\n      });\n      return result.accessToken;\n    } catch (e) {\n      throw new Error('Failed to get access token, try sign-in again.');\n    }\n  };\n\n  public logout = async () => {\n    await this.application.logout();\n  };\n}\n","import * as React from 'react';\n\nimport { Client as MSGraphClient } from '@microsoft/microsoft-graph-client';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { useParams } from 'react-router';\n\nimport { MicrosoftAuthenticationProvider } from '../../../util/authentication/microsoft';\n\nexport const Test: React.FC = () => {\n  const { path } = useParams<{ path: string }>();\n  const [result, setResult] = React.useState<any>();\n\n  React.useEffect(() => {\n    (async () => {\n      const authentication = new MicrosoftAuthenticationProvider();\n      const client = MSGraphClient.initWithMiddleware({\n        authProvider: { getAccessToken: authentication.getAccessToken },\n      });\n      const result = (await client.api(path).get()) as MicrosoftGraph.User;\n      setResult(result);\n    })();\n  }, [path]);\n  return <pre>{JSON.stringify(result, undefined, 2)}</pre>;\n};\n\n// Root of drive: https://docs.microsoft.com/en-us/graph/api/driveitem-list-children?view=graph-rest-1.0&tabs=http#list-children-of-a-driveitem-with-a-known-id\n// Example: https://localhost:3000/test/me/drive/root/children\n\n// Files on own drive: https://docs.microsoft.com/en-us/graph/api/driveitem-list-children?view=graph-rest-1.0&tabs=http#list-children-in-the-root-of-the-current-users-drive\n// Example: https://localhost:3000/test/me/drive/items/9C931AD91DD004A4!3872/children\n\n// Shared drive: https://docs.microsoft.com/en-us/onedrive/developer/rest-api/concepts/using-sharing-links?view=odsp-graph-online#enumerate-the-contents-of-a-shared-folder\n// Example: https://localhost:3000/test/drives/810805efb9fe5085/items/810805EFB9FE5085!105/children\n","import { Client as MSGraphClient, PageIterator } from '@microsoft/microsoft-graph-client';\nimport * as MSGraph from '@microsoft/microsoft-graph-types';\nimport { get, set } from 'idb-keyval';\nimport { Image } from '..';\nimport { MicrosoftAuthenticationProvider } from '../../../util/authentication/microsoft';\n\nconst authentication = new MicrosoftAuthenticationProvider();\nconst client = MSGraphClient.initWithMiddleware({\n  authProvider: { getAccessToken: authentication.getAccessToken },\n});\n\nexport class ImageFetcher {\n  private pendingItems: MSGraph.DriveItem[] = [];\n  private foundItems: MSGraph.DriveItem[] = [];\n\n  private status: ((fetchedItems: number, itemsToFetch: number) => void) | undefined;\n\n  public constructor(config: { status: ((fetchedItems: number, itemsToFetch: number) => void) | undefined }) {\n    this.status = config.status;\n  }\n\n  public start = async (forkCount: number) => {\n    const children = await this.graphGet<DriveItemChildren>('/me/drive/root/children');\n    this.pendingItems.push(...children.value);\n\n    for (let i = 0; i < forkCount; i++) {\n      setTimeout(() => {\n        this.fetchItem();\n      }, 0);\n    }\n  };\n\n  public getResult = async (): Promise<Array<Image>> => {\n    await this.waitForCompletion();\n    return this.foundItems.map((item) => ({\n      id: `${this.getDriveId(item)}:${this.getItemId(item)}`,\n      name: item.name!,\n      size: item.size!,\n      path: `${item.parentReference?.path}/${item.name}`,\n    }));\n  };\n\n  private waitForCompletion = (): Promise<void> =>\n    new Promise((resolve) => {\n      const intervalId = setInterval(() => {\n        if (this.foundItems.length > 0 && this.pendingItems.length === 0) {\n          clearInterval(intervalId);\n          resolve();\n        }\n      }, 100);\n    });\n\n  private fetchItem = async () => {\n    let item = this.pendingItems.shift();\n    while (item) {\n      if (item.folder) {\n        const cachedItems = await get<MSGraph.DriveItem[]>(`children:${this.getDriveId(item)}:${this.getItemId(item)}`);\n        if (cachedItems) {\n          this.pendingItems.push(...cachedItems);\n        } else {\n          const items = await this.fetchAllChildren(item);\n          await set(`children:${this.getDriveId(item)}:${this.getItemId(item)}`, items);\n          this.pendingItems.push(...items);\n        }\n      } else if (item.remoteItem) {\n        const remoteItem = await this.graphGet<MSGraph.DriveItem>(this.getItemPath(item));\n        this.pendingItems.push(remoteItem);\n      } else if (item.file) {\n        this.foundItems.push(item);\n      } else {\n        console.error('Found an unknown item.', item);\n      }\n      item = this.pendingItems.shift();\n      this.status && this.status(this.foundItems.length, this.pendingItems.length);\n    }\n  };\n\n  private fetchAllChildren = async (item: MSGraph.DriveItem): Promise<MSGraph.DriveItem[]> => {\n    const result: MSGraph.DriveItem[] = [];\n    const itemPath = this.getItemPath(item);\n    const children = await this.graphGet<DriveItemChildren>(`${itemPath}/children`);\n    const iterator = new PageIterator(client, children, (data: MSGraph.DriveItem) => {\n      result.push(data);\n      return true;\n    });\n    await iterator.iterate();\n    return result;\n  };\n\n  private getDriveId = (item: MSGraph.DriveItem) =>\n    item.remoteItem?.parentReference?.driveId\n      ? item.remoteItem?.parentReference?.driveId\n      : item.parentReference?.driveId;\n\n  private getItemId = (item: MSGraph.DriveItem) => (item.remoteItem?.id ? item.remoteItem?.id : item.id);\n\n  private getItemPath = (item: MSGraph.DriveItem) => `/drives/${this.getDriveId(item)}/items/${this.getItemId(item)}`;\n\n  private graphGet = async <T>(path: string): Promise<T> => {\n    return (await client.api(path).get()) as T;\n  };\n}\n\ntype DriveItemChildren = { value: MSGraph.DriveItem[] };\n","import { ImageBackend } from '..';\nimport { ImageFetcher } from './ImageFetcher';\n\nexport class OneDrive implements ImageBackend {\n  public listAllFiles = async (status: ((fetchedItems: number, itemsToFetch: number) => void) | undefined) => {\n    const fetcher = new ImageFetcher({ status });\n    fetcher.start(5);\n    return await fetcher.getResult();\n  };\n}\n","import * as React from 'react';\n\nimport { Button, LinearProgress, Typography } from '@material-ui/core';\nimport { Image } from '../../../backend/images';\nimport { OneDrive } from '../../../backend/images/onedrive/OneDrive';\n\nexport const Photos: React.FC = () => {\n  const [progress, setProgress] = React.useState<{ fetchedItems: number; itemsToFetch: number }>({\n    fetchedItems: 0,\n    itemsToFetch: 0,\n  });\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [result, setResult] = React.useState<Array<Image>>([]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (loading) {\n        const oneDrive = new OneDrive();\n        const allFiles = await oneDrive.listAllFiles((fetchedItems: number, itemsToFetch: number) => {\n          setProgress({ fetchedItems, itemsToFetch });\n        });\n        setResult(allFiles);\n        setLoading(false);\n      }\n    })();\n  }, [loading]);\n  return (\n    <>\n      <Typography variant=\"h1\">Photos</Typography>\n      {!loading && result.length === 0 && (\n        <Button onClick={() => setLoading(true)} variant=\"contained\" color=\"primary\">\n          Load Photos\n        </Button>\n      )}\n      {loading && (\n        <>\n          <ProgressWithInfo fetchedItems={progress.fetchedItems} itemsToFetch={progress.itemsToFetch} />\n        </>\n      )}\n      {result.length > 0 && (\n        <>\n          <ul>\n            <li>Found Photos: {result.length}</li>\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nconst ProgressWithInfo: React.FC<{ fetchedItems: number; itemsToFetch: number }> = (props) => {\n  const progress =\n    100 *\n    (props.fetchedItems === 0 && props.itemsToFetch === 0\n      ? 0\n      : props.fetchedItems / (props.fetchedItems + props.itemsToFetch));\n  return (\n    <>\n      <LinearProgress variant=\"determinate\" value={progress} />\n      <Typography variant=\"caption\">\n        {`${Math.round(progress)}%`} ({props.fetchedItems} found, {props.itemsToFetch} to be analyzed)\n      </Typography>\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport { makeStyles, Theme } from '@material-ui/core';\nimport { Route, Switch } from 'react-router';\n\nimport { Main } from './pages/Main';\nimport { Test } from './pages/Test';\nimport { Photos } from './pages/Photos';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  content: {\n    marginTop: '60px',\n    padding: theme.spacing(2),\n  },\n}));\n\nexport const Content: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Switch>\n        <Route path=\"/photos\">\n          <Photos />\n        </Route>\n        <Route path=\"/test/:path+\">\n          <Test />\n        </Route>\n        <Route path=\"/\">\n          <Main />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { HashRouter } from 'react-router-dom';\n\nimport { theme } from './theme';\nimport { Header } from './components/Header';\nimport { Content } from './content/Content';\nimport { baseUrl } from '../util/baseUrl';\n\nexport const App: React.FC = () => {\n  const basename = new URL(baseUrl).pathname;\n  return (\n    <>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <HashRouter basename={basename}>\n          <Header />\n          <Content />\n        </HashRouter>\n      </ThemeProvider>\n    </>\n  );\n};\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { App } from './ui/App';\nimport { MicrosoftAuthenticationProvider } from './util/authentication/microsoft';\nimport { reportWebVitals } from './util/reportWebVitals';\n\n(async () => {\n  const authentication = new MicrosoftAuthenticationProvider();\n  await authentication.authenticate();\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n  reportWebVitals(/*console.log*/); // see https://bit.ly/CRA-vitals\n})();\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n"],"sourceRoot":""}