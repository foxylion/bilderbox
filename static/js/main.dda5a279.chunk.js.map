{"version":3,"sources":["ui/theme/index.ts","ui/components/Header.tsx","ui/content/pages/Main.tsx","util/baseUrl.ts","util/authentication/microsoft.ts","ui/content/pages/AuthenticateMicrosoft.tsx","ui/content/pages/Test.tsx","ui/content/Content.tsx","ui/App.tsx","util/reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","grow","flexGrow","Header","classes","AppBar","position","Toolbar","IconButton","Collections","Typography","variant","noWrap","className","Main","Array","map","i","baseUrl","window","location","hostname","MicrosoftAuthenticationProvider","msalConfig","auth","clientId","redirectUri","cache","cacheLocation","scopes","application","PublicClientApplication","this","authenticate","async","isAuthenticated","hash","length","loginRedirect","handleRedirectPromise","Error","acquireTokenSilent","account","getAllAccounts","e","getAccessToken","accessToken","logout","AuthenticateMicrosoft","result","setResult","React","authentication","client","MSGraphClient","initWithMiddleware","authProvider","api","get","JSON","stringify","undefined","Test","path","useParams","content","marginTop","padding","spacing","Content","App","CssBaseline","ThemeProvider","basename","onPerfEntry","ReactDOM","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"mKAEO,MAAMA,EAAQC,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,c,iECHZ,MAAME,EAAYC,aAAW,MAC3BC,KAAM,CACJC,SAAU,OAIDC,EAAmB,KAC9B,MAAMC,EAAUL,IAEhB,OACE,cAACM,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,uBAGA,qBAAKC,UAAWT,EAAQH,a,WCnBzB,MAAMa,EAAiB,IAE1B,mCACG,IAAIC,MAAM,MAAMC,KAAKC,GACpB,cAACP,EAAA,EAAD,0BAAiBO,O,oBCRlB,MAAMC,EACkB,cAA7BC,OAAOC,SAASC,SAA2B,yBAA2B,iCCGjE,MAAMC,EAAmE,cAAD,KACrEC,WAA4B,CAClCC,KAAM,CACJC,SAAU,uCACVC,YAAc,GAAER,kBAElBS,MAAO,CACLC,cAAe,iBAP0D,KAWrEC,OAAS,CAAC,YAAa,sBAAuB,kBAXuB,KAYrEC,YAAc,IAAIC,IAAwBC,KAAKT,YAZsB,KActEU,aAAeC,UACpB,UAAYF,KAAKG,kBACf,GAAoC,IAAhChB,OAAOC,SAASgB,KAAKC,OACvBL,KAAKF,YAAYQ,cAAc,CAAET,OAAQG,KAAKH,aACzC,CAEL,UADqBG,KAAKF,YAAYS,wBAEpC,MAAM,IAAIC,MAAM,6CArBqD,KA2BtEL,gBAAkBD,UACvB,IAKE,aAJMF,KAAKF,YAAYW,mBAAmB,CACxCC,QAASV,KAAKF,YAAYa,iBAAiB,GAC3Cd,OAAQG,KAAKH,UAER,EACP,MAAOe,GACP,OAAO,IAnCkE,KAuCtEC,eAAiBX,UACtB,IAKE,aAJqBF,KAAKF,YAAYW,mBAAmB,CACvDC,QAASV,KAAKF,YAAYa,iBAAiB,GAC3Cd,OAAQG,KAAKH,UAEDiB,YACd,MAAOF,GACP,MAAM,IAAIJ,MAAM,oDA/CyD,KAmDtEO,OAASb,gBACRF,KAAKF,YAAYiB,WCjDpB,MAAMC,EAAkC,KAC7C,MAAOC,EAAQC,GAAaC,aAY5B,OAXAA,aAAgB,KACd,WACE,MAAMC,EAAiB,IAAI9B,QACrB8B,EAAenB,eACrB,MAAMoB,EAASC,IAAcC,mBAAmB,CAC9CC,aAAc,CAAEX,eAAgBO,EAAeP,kBAE3CI,QAAgBI,EAAOI,IAAI,OAAOC,MACxCR,EAAUD,IAPZ,KASC,IACI,8BAAMU,KAAKC,UAAUX,OAAQY,EAAW,MCZpCC,EAAiB,KAC5B,MAAM,KAAEC,GAASC,eACVf,EAAQC,GAAaC,aAY5B,OAVAA,aAAgB,KACd,WACE,MAAMC,EAAiB,IAAI9B,EACrB+B,EAASC,IAAcC,mBAAmB,CAC9CC,aAAc,CAAEX,eAAgBO,EAAeP,kBAE3CI,QAAgBI,EAAOI,IAAIM,GAAML,MACvCR,EAAUD,IANZ,KAQC,CAACc,IACG,8BAAMJ,KAAKC,UAAUX,OAAQY,EAAW,MCb3C9D,EAAYC,aAAYP,IAAD,CAC3BwE,QAAS,CACPC,UAAW,OACXC,QAAS1E,EAAM2E,QAAQ,QAIdC,EAAoB,KAC/B,MAAMjE,EAAUL,IAEhB,OACE,qBAAKc,UAAWT,EAAQ6D,QAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,KAAK,gBAAZ,SACE,cAACf,EAAD,MAEF,cAAC,IAAD,CAAOe,KAAK,eAAZ,SACE,cAACD,EAAD,MAEF,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAACjD,EAAD,YCnBGwD,EAAgB,IAEzB,qCACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAe/E,MAAOA,EAAtB,SACE,eAAC,IAAD,CAAegF,SAAUvD,EAAzB,UACE,cAACf,EAAD,IACA,cAACkE,EAAD,YCfsBK,MCIhCC,SACE,cAAC,aAAD,UACE,cAACL,EAAD,MAEFM,SAASC,eAAe,SDPpBH,GAAeA,aAAuBI,UACxC,8BAAqBC,MAAK,EAAGC,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,Q","file":"static/js/main.dda5a279.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fbc02d',\n    },\n    secondary: {\n      main: '#ffab00',\n    },\n  },\n});\n","import * as React from 'react';\n\nimport { AppBar, IconButton, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport { Collections as CollectionsIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nexport const Header: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <IconButton>\n          <CollectionsIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap>\n          BilderboX\n        </Typography>\n        <div className={classes.grow} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import * as React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nexport const Main: React.FC = () => {\n  return (\n    <>\n      {[...Array(100)].map((i) => (\n        <Typography key={i}>Hello World!</Typography>\n      ))}\n    </>\n  );\n};\n","export const baseUrl =\n  window.location.hostname === 'localhost' ? 'https://localhost:3000' : 'https://jakobnohe.de/bilderbox';\n","import { Configuration, PublicClientApplication } from '@azure/msal-browser';\nimport { AuthenticationProvider } from '.';\nimport { baseUrl } from '../baseUrl';\n\nexport class MicrosoftAuthenticationProvider implements AuthenticationProvider {\n  private msalConfig: Configuration = {\n    auth: {\n      clientId: 'df346ab3-6ba2-4c7a-a4b6-96986093b576',\n      redirectUri: `${baseUrl}/authenticate`,\n    },\n    cache: {\n      cacheLocation: 'localStorage',\n    },\n  };\n\n  private scopes = ['User.Read', 'Files.ReadWrite.All', 'offline_access'];\n  private application = new PublicClientApplication(this.msalConfig);\n\n  public authenticate = async (): Promise<void> => {\n    if (!(await this.isAuthenticated())) {\n      if (window.location.hash.length === 0) {\n        this.application.loginRedirect({ scopes: this.scopes });\n      } else {\n        const result = await this.application.handleRedirectPromise();\n        if (!result) {\n          throw new Error('Failed to authenticate, result ist NULL');\n        }\n      }\n    }\n  };\n\n  public isAuthenticated = async (): Promise<boolean> => {\n    try {\n      await this.application.acquireTokenSilent({\n        account: this.application.getAllAccounts()[0],\n        scopes: this.scopes,\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  public getAccessToken = async (): Promise<string> => {\n    try {\n      const result = await this.application.acquireTokenSilent({\n        account: this.application.getAllAccounts()[0],\n        scopes: this.scopes,\n      });\n      return result.accessToken;\n    } catch (e) {\n      throw new Error('Failed to get access token, try sign-in again.');\n    }\n  };\n\n  public logout = async () => {\n    await this.application.logout();\n  };\n}\n","import * as React from 'react';\n\nimport { Client as MSGraphClient } from '@microsoft/microsoft-graph-client';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n\nimport { MicrosoftAuthenticationProvider } from '../../../util/authentication/microsoft';\n\nexport const AuthenticateMicrosoft: React.FC = () => {\n  const [result, setResult] = React.useState<MicrosoftGraph.User>();\n  React.useEffect(() => {\n    (async () => {\n      const authentication = new MicrosoftAuthenticationProvider();\n      await authentication.authenticate();\n      const client = MSGraphClient.initWithMiddleware({\n        authProvider: { getAccessToken: authentication.getAccessToken },\n      });\n      const result = (await client.api('/me').get()) as MicrosoftGraph.User;\n      setResult(result);\n    })();\n  }, []);\n  return <pre>{JSON.stringify(result, undefined, 2)}</pre>;\n};\n","import * as React from 'react';\n\nimport { Client as MSGraphClient } from '@microsoft/microsoft-graph-client';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { useParams } from 'react-router';\n\nimport { MicrosoftAuthenticationProvider } from '../../../util/authentication/microsoft';\n\nexport const Test: React.FC = () => {\n  const { path } = useParams<{ path: string }>();\n  const [result, setResult] = React.useState<any>();\n\n  React.useEffect(() => {\n    (async () => {\n      const authentication = new MicrosoftAuthenticationProvider();\n      const client = MSGraphClient.initWithMiddleware({\n        authProvider: { getAccessToken: authentication.getAccessToken },\n      });\n      const result = (await client.api(path).get()) as MicrosoftGraph.User;\n      setResult(result);\n    })();\n  }, [path]);\n  return <pre>{JSON.stringify(result, undefined, 2)}</pre>;\n};\n","import * as React from 'react';\n\nimport { makeStyles, Theme } from '@material-ui/core';\nimport { Route, Switch } from 'react-router';\n\nimport { Main } from './pages/Main';\nimport { AuthenticateMicrosoft } from './pages/AuthenticateMicrosoft';\nimport { Test } from './pages/Test';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  content: {\n    marginTop: '60px',\n    padding: theme.spacing(2),\n  },\n}));\n\nexport const Content: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Switch>\n        <Route path=\"/authenticate\">\n          <AuthenticateMicrosoft />\n        </Route>\n        <Route path=\"/test/:path+\">\n          <Test />\n        </Route>\n        <Route path=\"/\">\n          <Main />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { theme } from './theme';\nimport { Header } from './components/Header';\nimport { Content } from './content/Content';\nimport { baseUrl } from '../util/baseUrl';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename={baseUrl}>\n          <Header />\n          <Content />\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { App } from './ui/App';\nimport { reportWebVitals } from './util/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals(/*console.log*/); // see https://bit.ly/CRA-vitals\n"],"sourceRoot":""}